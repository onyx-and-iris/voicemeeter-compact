[project]
name = "voicemeeter-compact"
version = "1.9.8"
description = "A Compact Voicemeeter Remote App"
authors = [
    {name = "Onyx and Iris",email = "code@onyxandiris.online"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "voicemeeter-api (>=2.6.1,<3.0.0)",
    "vban-cmd (>=2.5.0,<3.0.0)",
    "sv-ttk (>=2.6.0,<3.0.0)",
    "tomli (>=2.0.1,<3.0) ; python_version < '3.11'",
]

[project.scripts]
gui-basic-compact = "vmcompact.gui.basic:run"
gui-banana-compact = "vmcompact.gui.banana:run"
gui-potato-compact = "vmcompact.gui.potato:run"

[tool.poetry]
packages = [{ include = "vmcompact" }]
include = ["vmcompact/img/cat.ico"]

[tool.poetry.requires-plugins]
poethepoet = "^0.32.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.1"

[tool.poetry.group.build.dependencies]
pyinstaller = "^6.11.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
build-sunvalley = "task build-sunvalley"
build-forest = "task build-forest"
release = [
  { ref = "build-sunvalley" },
  { ref = "build-forest" },
  { cmd = "task compress-sunvalley" },
  { cmd = "task compress-forest" },
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Unlike Black, use single quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "E402",
    "F401",
]